what_to_play_age_of_mythology:
    use what_to_play('Age of Mythology'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_among_us:
    use what_to_play('Among Us'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_apex_legends:
    use what_to_play('Apex Legends'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_army_men_rts:
    use what_to_play('Army Men RTS'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_business_tour:
    use what_to_play('Business Tour'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_civilization_vi:
    use what_to_play('Civilization VI'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_cs2:
    use what_to_play('CS2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_doki_doki_literature_club:
    use what_to_play('Doki Doki Literature Club'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_fallout_4:
    use what_to_play('Fallout 4'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_fallout_shelter:
    use what_to_play('Fallout Shelter'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_game_dev_tycoon:
    use what_to_play('Game Dev Tycoon'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_grand_theft_auto_5:
    use what_to_play('Grand Theft Auto 5'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_hades:
    use what_to_play('Hades'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_helltaker:
    use what_to_play('Helltaker'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_just_cause_2:
    use what_to_play('Just Cause 2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_kingdom_two_crowns:
    use what_to_play('Kingdom Two Crowns'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_metro_2033:
    use what_to_play('Metro 2033'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_minecraft:
    use what_to_play('Minecraft'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_northgard:
    use what_to_play('Northgard'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_overcooked_2:
    use what_to_play('Overcooked! 2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_paladins:
    use what_to_play('Paladins'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_pathway:
    use what_to_play('Pathway'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_phasmophobia:
    use what_to_play('Phasmophobia'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_project_zomboid:
    use what_to_play('Project Zomboid'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_rainbow_six_siege:
    use what_to_play('Rainbow Six Siege'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_sleeping_dogs:
    use what_to_play('Sleeping Dogs'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_star_wars_jedi_fallen_order:
    use what_to_play('Star Wars jedi Fallen Order'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_subnautica:
    use what_to_play('Subnautica'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_the_forest:
    use what_to_play('The Forest'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_trimps:
    use what_to_play('Trimps'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_uno:
    use what_to_play('Uno'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_valorant:
    use what_to_play('VALORANT'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_dont_starve_together:
    use what_to_play('Don’t Starve Together'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_fallout:
    use what_to_play('Fallout'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_call_of_cthulhu:
    use what_to_play('Call of Cthulhu'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_garrys_mod:
    use what_to_play('Garry’s Mod'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_halflife:
    use what_to_play('Half-Life'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_halflife_2:
    use what_to_play('Half-Life 2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_left_4_dead_2:
    use what_to_play('Left 4 Dead 2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_noita:
    use what_to_play('Noita'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_portal_2:
    use what_to_play('Portal 2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_resident_evil_4:
    use what_to_play('Resident Evil 4'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_stalker_anomaly:
    use what_to_play('S.T.A.L.K.E.R.: Anomaly'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_stalker_shadow_of_chernobyl:
    use what_to_play('S.T.A.L.K.E.R.: Shadow of Chernobyl'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_superhot:
    use what_to_play('SUPERHOT'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_supertuxkart:
    use what_to_play('SuperTuxKart'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_team_fortress_2:
    use what_to_play('Team Fortress 2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_terraria:
    use what_to_play('Terraria'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_unturned:
    use what_to_play('Unturned'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_rimworld:
    use what_to_play('Rimworld'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_crusader_kings_3:
    use what_to_play('Crusader Kings 3'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_europa_universalis_iv:
    use what_to_play('Europa Universalis IV'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_hearts_of_iron_iv:
    use what_to_play('Hearts of Iron IV'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_stellaris:
    use what_to_play('Stellaris'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_victoria_2:
    use what_to_play('Victoria 2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_cult_of_the_lamb:
    use what_to_play('Cult of the Lamb'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_stardew_valley:
    use what_to_play('Stardew Valley'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_doom_2016:
    use what_to_play('DOOM 2016'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_hunt_showdown:
    use what_to_play('Hunt: Showdown'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_fear__hunger:
    use what_to_play('Fear & Hunger'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_guilty_gear_strive:
    use what_to_play('Guilty Gear: Strive'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_garten_of_banban:
    use what_to_play('Garten of Banban'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_factorio:
    use what_to_play('Factorio'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_omega_strikers:
    use what_to_play('Omega Strikers'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_shin_megami_tensei_iii_nocturne_hd_remaster:
    use what_to_play('Shin Megami Tensei III Nocturne HD Remaster'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_persona_4_golden:
    use what_to_play('Persona 4 Golden'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_halflife_2_episode_one:
    use what_to_play('Half-Life 2: Episode One'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_halflife_2_episode_two:
    use what_to_play('Half-Life 2: Episode Two'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_crysis_3:
    use what_to_play('Crysis 3'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_hogwarts_legacy:
    use what_to_play('Hogwarts Legacy'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_paper_lily__chapter_1:
    use what_to_play('Paper Lily - Chapter 1'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_astral_party:
    use what_to_play('Astral Party'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_muse_dash:
    use what_to_play('Muse Dash'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_osu:
    use what_to_play('OSU!'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_payday_2:
    use what_to_play('Payday 2'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_warframe:
    use what_to_play('Warframe'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_brawhalla:
    use what_to_play('Brawhalla'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_street_fighter_6:
    use what_to_play('Street Fighter 6'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_tangle_tower:
    use what_to_play('Tangle Tower'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_baldurs_gate_3:
    use what_to_play('Baldur's Gate 3'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_the_room_vr:
    use what_to_play('The Room VR'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_momodora_moonlit_farewell:
    use what_to_play('Momodora Moonlit Farewell'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_chrono_trigger:
    use what_to_play('Chrono Trigger'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_final_fantasy_xiv:
    use what_to_play('Final Fantasy XIV'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_final_fantasy_vii:
    use what_to_play('Final Fantasy VII'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_gorn:
    use what_to_play('GORN'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_half_life_alyx:
    use what_to_play('Half Life Alyx'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_outer_wilds:
    use what_to_play('Outer Wilds'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_rain_world:
    use what_to_play('Rain World'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_crosscode:
    use what_to_play('CrossCode'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_inscryption:
    use what_to_play('Inscryption'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_skullgirls_2nd_encore:
    use what_to_play('Skullgirls 2nd Encore'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_touhou_luna_nights:
    use what_to_play('Touhou Luna Nights'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_plants_vs_zombies:
    use what_to_play('Plants vs Zombies'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_papas_freezeria_deluxe:
    use what_to_play('Papa's Freezeria Deluxe'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_hollow_knight:
    use what_to_play('Hollow Knight'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_red_faction:
    use what_to_play('Red Faction'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_grand_theft_auto_4:
    use what_to_play('Grand Theft Auto 4'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

what_to_play_tropico_6:
    use what_to_play('Tropico 6'):
    when:
        questions.historical(True)
        questions.otaku(True)
        questions.challenge(True)
        questions.notfree(True)
        questions.competitive(True)
        questions.multiplayer(True)
        questions.violence(True)
        questions.horror(True)
        questions.relax(True)
        questions.shooting(True)
        questions.survival(True)
        questions.platform($plat)
        check $plat in (1,2,3,4)

